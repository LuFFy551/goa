# 3) ფუნქცია, რომელიც გააორმაგებს სიის ყველა ელემენტს
def double_values(lst):
    return [x * 2 for x in lst]

# 4) ფუნქცია, რომელიც აბრუნებს მხოლოდ ლუწ რიცხვებს სიიდან
def even_numbers(lst):
    return [x for x in lst if x % 2 == 0]

# 5) ფუნქცია, რომელიც აბრუნებს სიას, რომლის ელემენტებიც კვადრატშია აყვანილი
def square_values(lst):
    return [x ** 2 for x in lst]

# 6) ფუნქცია, რომელიც სტრინგიდან დატოვებს მხოლოდ ხმოვან ასოებს
def filter_vowels(s):
    vowels = 'aeiouAEIOUაეიოუ'
    return ''.join([char for char in s if char in vowels])

# 7) ფუნქცია, რომელიც აბრუნებს მხოლოდ უარყოფით რიცხვებს სიიდან
def negative_numbers(lst):
    return [x for x in lst if x < 0]

# 8) ფუნქცია, რომელიც აბრუნებს მხოლოდ დადებით რიცხვებს სიიდან
def positive_numbers(lst):
    return [x for x in lst if x > 0]

# 9) ფუნქცია, რომელიც აბრუნებს რიცხვს აყვანილს კვადრატში და გამრავლებულს 10-ზე
def square_times_ten(x):
    return (x ** 2) * 10

# 10) ფუნქცია, რომელიც აბრუნებს x-ს აყვანილს y ხარისხში
def power(x, y):
      return x ** y


#ფუნქციების გამოყენება Python-ში (და ზოგადად პროგრამირებაში) ძალიან მნიშვნელოვანია და აი რატომ:

#თუ ერთი და იგივე კოდი ბევრგან გჭირდება, ფუნქციით შეგიძლია ის ერთხელ დაწერო და როცა გინდა, გამოიძახო.
#ფუნქცია გეხმარება კოდი დაყო პატარა ნაწილებად, რაც უფრო წაკითხვადს და გასაგებს ხდის მას.
#როცა კოდი ერთ ფუნქციაშია ჩასმული, შეცდომების პოვნა და გამოსწორება ბევრად უფრო მარტივია.
#ფუნქციები გაძლევს საშუალებას ერთსა და იმავე კოდს სხვადასხვა მონაცემზე იმუშაოს. მაგალითად:
def square(x):
    return x ** 2

print(square(2))  # -> 4
print(square(5))  # -> 

#დიდ პროგრამაში ფუნქციების გარეშე კოდი გახდებოდა ქაოტური. ფუნქციებით შეგიძლია წესრიგი შეიტანო და კარგად მართო შენი პროექტი.


#codewars